Start with: rake test:units TEST=unit/models/page_test.rb

Current Issue: Connectors are not being created/copied as a side effect of adding blocks to pages.
    I believe it should be leaving the original connectors, but creating new conns with pointers to the 'latest' version of the page.
    This would allow for previous 'states' of a page to remain intact when viewed as page versions.

How to adding ActiveRecord SQL logging to the console:
    ActiveRecord::Base.logger = Logger.new(STDOUT)

Issue #2: (master_helper_module has gone apparently been removed.)
    rake test:units TEST=unit/behaviors/rendering_test.rb
- Error with view_paths being called on controller (See stack trace)
- Blocks are getting all the Helpers, including Rendering, which defines its own 'render' method.
- It appears an exception for 'action_name' not being a valid method on blocks is being thrown.
- HtmlBlock (and presumably other blocks) are extending AbstractController::Rendering, for reasons I haven't yet determined.
- This is causing the wrong 'render' method to be called.
- Blocks that implement 'render' (Portlets, Tags) should have their 'render' method called.

Issue #3
 rake test:units TEST=unit/lib/content_block_test.rb

    A new connector is being created when a block is updated, but it's id is nil.
    No connectors are being found when it gets filtered down to the page and block version.
    See comments/logging in connecting.rb for update_connected_pages and connector.rb for find_connectable
    
    Look at ActiveSupport.on_load for things that went missing.
    Learn how to use the ruby debugger from the command line (or get RubyMine 2.5)


State of Test Cases (As of Oct 14, 2010)
====================
Unit - 28 Failures, 16 Errors
Functional - ?
Integration - All Pass


Open Issues
===========
1. When saving blocks attached to a page, an incorrect number of connectors are being created (content_block_test.rb)
2. Content blocks are not being displayed within their containers (Seems likely our assumptions about 'attribute' names from Rails 2 has changed)
3. content/show.html.erb is not rendering anything for the 'body' of the page. I.e. content explicitly added to the main area rather than content_for calls. (Likely related to #2)
4. Pages do not render their status icon in the sitemap.
5. link_to_function has been removed. Check All and uncheck all are currently broken (See ApplicationHelper)
6. Attachments throw errors (uninitialized constant ActionController::UploadedTempfile)
7. Saving a block with unchanged value shouldn't create additional versions (rake test:units TEST=unit/lib/content_block_test.rb)
9. Auto path suggestion doesn't work for pages
10. Cannot add blocks to pages
11. Building page routers from database is disabled (Needs reworking: See routes.rb for details).
12. Permissions Tests for SampleBlock is broken. (Potentially result of overly brittle tests. Might be better rewritten)
13. Test that file browser.xml works (for WYSIWYG editor)
14. Deleting Page Templates doesn't work. (UI silently fails)
15. Add/Edit/Delete/Load page_routes doesn't work.
* Altering the uploaded file may not change the name of the file. (Broken test or broken feature?)
* require_javascript_include - Tests are broken (probably due to changes to rails internals) 
* save! is broken (Maybe)
* Will need to rewrite generators to use Thor (Will require new fork)
* Look at how ActionSupport works with providing hooks

Good Ideas
* Rewrite Behaviors to use ActiveSupport::Concern (at least look at it to see what is useful)
* Not sure Publishing and Versioning should be split up. They are really intertwined in practice.
* Start introducing cucumber tests

CMS Behavior Dependencies
================
* Connecting -> Versioning (.draft)
* Versioning -> Publishing (.publish)

To Do List
==========
1. Build the gem and test it against a new rails 3 project.
2. Verify it works in 1.8.7
3. Determine if both Rails 2 and 3 can be supported in the same gem.


Making save work
================
Reworked save to use normal callback behavior, rather than overriding save_with_validations.

Known Issues:
- Destroying is throwing errors.


ActiveRecord alias chain- Here is the order that methods get called.
--
save
  save_with_transactions
  save_with_dirty
  save_with_validations
  AR::Base#save (save_without_validations)
  AR::Base#create_or_update_with_callbacks

  
AR::Base - Defines a 'save' method with no params
AR::Validations - alias save to a save_with_validations (which takes params) 
ActiveRecord Object has:
- save_with_validations(options)
- save_without_validation() - (Original save)


Items Completed
===============
1. Hacked some helpers to not return unsafe strings. This needs to be really fixed.
2. Upgraded the 'stock' Rails files of BrowserCMS to use Rails 3.
3. Upgraded factory_girl to use a Rails 3/git based version
4. Added bundler configuration (this will need to be documented).
5. Sitemap folders now render correctly (fixed raw/h strings issue). Buttons too.
6. Removed calls to 'after_validation_on_update' in favor of 'after_validation' with a check for new_record?
7. SITE_DOMAIN was a constant can't be found since there is no more global namespace. (Read up on how to add new configuration to Rails apps via configuration)
  (SITE_DOMAIN is fixed, but might not work correctly when new BrowserCMS projects are generated)
8. Rewrote versioning to override the correct method for handling callbacks.
9. Catchall route used to split path into an array, then the content controller would reassemble it. I have reversed this procedure.
10. Hard coded two paths into the browsercms config/routes.rb to allow routes to work.

Other Notes
==========
1. Some versions of 1.8.7-p248 and later have random Segmentation Fault/Bus issues with databases. See
    * http://busyprogrammer.wordpress.com/tag/bus-error/
    * Segmentation Fault - http://busyprogrammer.wordpress.com/tag/bus-error/ Only 1.8.7 p249